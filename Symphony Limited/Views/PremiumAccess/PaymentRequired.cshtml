@{
    ViewData["Title"] = "Course";
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Payment Required</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <style>
        body {
            background: linear-gradient(to right, #d946ef, #6366f1);
        }

        .payment-container {
            max-width: 450px;
            margin: 50px auto;
            background: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0,0,0,0.1);
        }

        .card-icons {
            text-align: right;
        }

        .btn-custom {
            background-color: #28a745;
            color: white;
            font-size: 18px;
            font-weight: bold;
            transition: 0.3s;
        }

            .btn-custom:hover {
                background-color: #218838;
            }
    </style>
</head>
<body>
    <div class="payment-container">
        <h3 class="text-center">Payment Details</h3>
        <div class="card-icons mb-3">
            <img src="https://i.imgur.com/2ISgYja.png" width="120">
        </div>
        <form id="payment-form">
            <div class="mb-3">
                <label class="form-label">Card Number</label>
                <div class="input-group">
                    <input type="tel" class="form-control" name="cardNumber" placeholder="1234 5678 9012 3456" required>
                    <span class="input-group-text"><i class="fa fa-credit-card"></i></span>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label class="form-label">Expiration Date</label>
                    <input type="tel" class="form-control" name="cardExpiry" placeholder="MM / YY" required>
                </div>
                <div class="col-md-6 mb-3">
                    <label class="form-label">CVV</label>
                    <input type="tel" class="form-control" name="cardCVC" placeholder="CVC" required>
                </div>
            </div>
            <div class="mb-3">
                <label class="form-label">Coupon Code</label>
                <input type="text" class="form-control" name="couponCode" placeholder="Enter Coupon Code">
            </div>
            <button type="submit" class="btn btn-custom w-100">Start Subscription</button>
        </form>
    </div>
    <script src="https://js.stripe.com/v2/"></script>
	<!-- If you're using Stripe for payments -->
	<script type="text/javascript" src="https://js.stripe.com/v2/"></script>
	<script>

			var $form = $('#payment-form');
		$form.on('submit', payWithStripe);

		/* If you're using Stripe for payments */
		function payWithStripe(e) {
			e.preventDefault();

			/* Visual feedback */
			$form.find('[type=submit]').html('Validating <i class="fa fa-spinner fa-pulse"></i>');

			var PublishableKey = 'pk_test_b1qXXwATmiaA1VDJ1mOVVO1p'; // Replace with your API publishable key
			Stripe.setPublishableKey(PublishableKey);

			/* Create token */
			var expiry = $form.find('[name=cardExpiry]').payment('cardExpiryVal');
			var ccData = {
				number: $form.find('[name=cardNumber]').val().replace(/\s/g,''),
				cvc: $form.find('[name=cardCVC]').val(),
				exp_month: expiry.month,
				exp_year: expiry.year
			};

			Stripe.card.createToken(ccData, function stripeResponseHandler(status, response) {
				if (response.error) {
					/* Visual feedback */
					$form.find('[type=submit]').html('Try again');
					/* Show Stripe errors on the form */
					$form.find('.payment-errors').text(response.error.message);
					$form.find('.payment-errors').closest('.row').show();
				} else {
					/* Visual feedback */
					$form.find('[type=submit]').html('Processing <i class="fa fa-spinner fa-pulse"></i>');
					/* Hide Stripe errors on the form */
					$form.find('.payment-errors').closest('.row').hide();
					$form.find('.payment-errors').text("");
					// response contains id and card, which contains additional card details
					console.log(response.id);
					console.log(response.card);
					var token = response.id;
					// AJAX - you would send 'token' to your server here.
					$.post('/account/stripe_card_token', {
							token: token
						})
						// Assign handlers immediately after making the request,
						.done(function(data, textStatus, jqXHR) {
							$form.find('[type=submit]').html('Payment successful <i class="fa fa-check"></i>').prop('disabled', true);
						})
						.fail(function(jqXHR, textStatus, errorThrown) {
							$form.find('[type=submit]').html('There was a problem').removeClass('success').addClass('error');
							/* Show Stripe errors on the form */
							$form.find('.payment-errors').text('Try refreshing the page and trying again.');
							$form.find('.payment-errors').closest('.row').show();
						});
				}
			});
		}
		/* Fancy restrictive input formatting via jQuery.payment library*/
		$('input[name=cardNumber]').payment('formatCardNumber');
		$('input[name=cardCVC]').payment('formatCardCVC');
		$('input[name=cardExpiry').payment('formatCardExpiry');

		/* Form validation using Stripe client-side validation helpers */
		jQuery.validator.addMethod("cardNumber", function(value, element) {
			return this.optional(element) || Stripe.card.validateCardNumber(value);
		}, "Please specify a valid credit card number.");

		jQuery.validator.addMethod("cardExpiry", function(value, element) {
			/* Parsing month/year uses jQuery.payment library */
			value = $.payment.cardExpiryVal(value);
			return this.optional(element) || Stripe.card.validateExpiry(value.month, value.year);
		}, "Invalid expiration date.");

		jQuery.validator.addMethod("cardCVC", function(value, element) {
			return this.optional(element) || Stripe.card.validateCVC(value);
		}, "Invalid CVC.");

		validator = $form.validate({
			rules: {
				cardNumber: {
					required: true,
					cardNumber: true
				},
				cardExpiry: {
					required: true,
					cardExpiry: true
				},
				cardCVC: {
					required: true,
					cardCVC: true
				}
			},
			highlight: function(element) {
				$(element).closest('.form-control').removeClass('success').addClass('error');
			},
			unhighlight: function(element) {
				$(element).closest('.form-control').removeClass('error').addClass('success');
			},
			errorPlacement: function(error, element) {
				$(element).closest('.form-group').append(error);
			}
		});

		paymentFormReady = function() {
			if ($form.find('[name=cardNumber]').hasClass("success") &&
				$form.find('[name=cardExpiry]').hasClass("success") &&
				$form.find('[name=cardCVC]').val().length > 1) {
				return true;
			} else {
				return false;
			}
		}

		$form.find('[type=submit]').prop('disabled', true);
		var readyInterval = setInterval(function() {
			if (paymentFormReady()) {
				$form.find('[type=submit]').prop('disabled', false);
				clearInterval(readyInterval);
			}
		}, 250);


		/*
		https://goo.gl/PLbrBK
		*/
	</script>
</body>
</html>
